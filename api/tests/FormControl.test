<?php

// $Id$

/**
 * @file
 * 
 * Unit Tests.
 */

/**
 * Unit Tests for the FormControl class.
 */
class XMLFormAPIFormControlTestCase extends DrupalUnitTestCase {

  /**
   * Get Test info.
   * 
   * @return array
   *   Properties that are displayed in the test selection form.
   */
  public static function getInfo() {
    return array(
      'name' => 'Form Control Unit Tests.',
      'description' => 'Unit tests for FormControl.inc, and FormControlGeneratorFunctions.inc',
      'group' => 'XML Form API',
    );
  }

  /**
   * setUp() performs any pre-requisite tasks that need to happen. 
   */
  public function setUp() {
    // Enable any modules required for the test.
    parent::setUp('xml_form_api');
    module_load_include('inc', 'xml_form_api', 'FormControl');
  }

  /**
   *
   */
  public function testCreateAllFormControlTypes() {
    $form_control_definitions = array(
      '<access>true</access>' => array('#access' => TRUE),
      '<action>asdf</action>' => array('#action' => 'asdf'),
      '<after_build>
        <key>
          <value>system_check_directory</value>
        </key>
      </after_build>' => array('#after_build' => array('system_check_directory')),
      '<ahah>
        <path>asdf</path>
        <wrapper>qwerty</wrapper>
      </ahah>' => array('#ahah' => array('path' => 'asdf', 'wrapper' => 'qwerty')),
      '<attributes>
        <key name="class">
          <value>foo</value>
        </key>
      </attributes>' => array('#attributes' => array('class' => 'foo')),
      '<autocomplete_path>asdf</autocomplete_path>' => array('#autocomplete_path' => 'asdf'),
      '<button_type>submit</button_type>' => array('#button_type' => 'submit'),
      '<collapsed>true</collapsed>' => array('#collapsed' => TRUE),
      '<collapsible>false</collapsible>' => array('#collapsible' => FALSE),
      '<cols>2</cols>' => array('#cols' => 2),
      '<default_value>foobar</default_value>' => array('#default_value' => 'foobar'),
      '<delta>33</delta>' => array('#delta' => 33),
      '<description>loren ipsum...</description>' => array('#description' => 'loren ipsum...'),
      '<disabled>FALSE</disabled>' => array('#disabled' => false),
      '<element_validate>
        <key>
          <value>func1</value>
        </key>
        <key>
          <value>func2</value>
        </key>
      </element_validate>' => array('#element_validate' => array('func1', 'func2')),
      '<executes_submit_callback>TRUE</executes_submit_callback>' => array('#executes_submit_callback' => true),
      '<field_prefix>asdf</field_prefix>' => array('#field_prefix' => 'asdf'),
      '<field_suffix>qwerty</field_suffix>' => array('#field_suffix' => 'qwerty'),
      '<maxlength>5</maxlength>' => array('#maxlength' => 5),
      '<method>get</method>' => array('#method' => 'get'),
      '<multiple>faLse</multiple>' => array('#multiple' => false),
      '<name>submit</name>' => array('#name' => 'submit'),
      '<options>
        <key name="opt1">
          <value>val1</value>
        </key>
        <key name="opt2">
          <value>2</value>
        </key>
      </options>' => array('#options' => array('opt1' => 'val1', 'opt2' => '2')),
      '<post_render>
        <key>
          <value>func</value>
        </key>
       </post_render>' => array('#post_render' => array('func')),
      '<prefix>&lt;div&gt;</prefix>' => array('#prefix' => '<div>'),
      '<pre_render>
        <key>
         <value>filter_form_access_denied</value>
        </key>
        <key>
         <value>drupal_render</value>
        </key>
       </pre_render>' => array('#pre_render' => array('filter_form_access_denied', 'drupal_render')),
      '<process>
        <key>
         <value>func1</value>
        </key>
        <key>
         <value>func2</value>
        </key>
       </process>' => array('#process' => array('func1', 'func2')),
      '<redirect>
        <false>false</false>
       </redirect>' => array('#redirect' => FALSE),
      '<redirect>
        <internal_path>node/34</internal_path>
       </redirect>' => array('#redirect' => 'node/34'),
      '<redirect>
        <array>
          <key>
            <value>user/login</value>
          </key>
          <key>
            <value>destination=node</value>
          </key>
        </array>
       </redirect>' => array('#redirect' => array('user/login', 'destination=node')),
      '<required>true</required>' => array('#required' => TRUE),
      '<resizable>false</resizable>' => array('#resizable' => false),
      '<return_value>5</return_value>' => array('#return_value' => '5'),
      '<rows>10</rows>' => array('#rows' => 10),
      '<size>11</size>' => array('#size' => 11),
      '<src>http://www.google.ca/logos/2011/audubon11-hp.jpg</src>' => array('#src' => 'http://www.google.ca/logos/2011/audubon11-hp.jpg'),
      '<submit>
        <key>
          <value>function_name</value>
        </key>
       </submit>' => array('#submit' => array('function_name')),
      '<suffix>&lt;/div&gt;</suffix>' => array('#suffix' => '</div>'),
      '<theme>function</theme>' => array('#theme' => 'function'),
      '<title>text</title>' => array('#title' => 'text'),
      '<tree>false</tree>' => array('#tree' => FALSE),
      '<type>textfield</type>' => array('#type' => 'textfield'),
      '<validate>
        <key>
          <value>func1</value>
        </key>
        <key>
          <value>func2</value>
        </key>
       </validate>' => array('#validate' => array('func1', 'func2')),
      '<value>321</value>' => array('#value' => '321'),
      '<weight>10</weight>' => array('#weight' => 10),
    );
    foreach ($form_control_definitions as $definition => $value) {
      $node = simplexml_load_string($definition);
      $form_control = new FormControl($node);
      $a = $form_control->toArray();
      if ($a !== $value) {
        $this->fail('FormControl::toArray() failed to generate the correct value for the xml definition ' . htmlentities($definition));
      }
      else {
        $this->pass('FormControl::toArray() generated to correct value for the xml definition' . htmlentities($definition));
      }
    }
  }

}