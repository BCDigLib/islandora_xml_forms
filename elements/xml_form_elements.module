<?php

/**
 * @file
 *
 * Hooks and constants for xml_form_elements.
 */
/**
 * Constants
 */
define('MENU_XML_FORM_ELEMENTS_AHAH', 'xml/form/elements/ahah/');
define('MENU_XML_FORM_ELEMENTS_AHAH_DUPICATE', MENU_XML_FORM_ELEMENTS_AHAH . 'duplicate/%');
define('MENU_XML_FORM_ELEMENTS_AHAH_REMOVE', MENU_XML_FORM_ELEMENTS_AHAH . 'remove/%');
define('MENU_XML_FORM_ELEMENTS_AHAH_VALIDATE', MENU_XML_FORM_ELEMENTS_AHAH . 'validate');
define('MENU_XML_FORM_ELEMENTS_AHAH_VALIDATE_ELEMENT', MENU_XML_FORM_ELEMENTS_AHAH . 'validate/%');
define('MENU_XML_FORM_ELEMENTS_AHAH_REBUILD', MENU_XML_FORM_ELEMENTS_AHAH . 'rebuild/%');
define('MENU_XML_FORM_ELEMENTS_AHAH_TAG_ADD', MENU_XML_FORM_ELEMENTS_AHAH . 'tag/add/%');
define('MENU_XML_FORM_ELEMENTS_AHAH_TAG_EDIT', MENU_XML_FORM_ELEMENTS_AHAH . 'tag/edit/%');
define('MENU_XML_FORM_ELEMENTS_AHAH_TAG_REMOVE', MENU_XML_FORM_ELEMENTS_AHAH . 'tag/remove/%');
define('THEME_XML_FORM_ELEMENTS_TABS', 'tabs');
define('THEME_XML_FORM_ELEMENTS_TABS_CONTENT', 'tabs_content');
define('THEME_XML_FORM_ELEMENTS_TABPANEL', 'tabpanel');
define('THEME_XML_FORM_ELEMENTS_TAGS', 'tags');
define('THEME_XML_FORM_ELEMENTS_TAGS_CONTENT', 'tags_content');
define('THEME_XML_FORM_ELEMENTS_TAG', 'tag');
define('THEME_XML_FORM_ELEMENTS_DATEPICKER', 'datepicker');
define('THEME_XML_FORM_ELEMENTS_VALIDATE', 'validate');
define('THEME_XML_FORM_ELEMENTS_PAGES', 'pages');
define('THEME_XML_FORM_ELEMENTS_PAGE', 'xml_form_elements_page');
define('PATH_XML_FORM_ELEMENTS', drupal_get_path('module', 'xml_form_elements') . '/');
define('PATH_XML_FORM_ELEMENTS_INCLUDES', PATH_XML_FORM_ELEMENTS . 'includes/');
define('PATH_XML_FORM_ELEMENTS_JQUERY_THEME', PATH_XML_FORM_ELEMENTS . 'theme/');
define('PATH_XML_FORM_ELEMENTS_JS', PATH_XML_FORM_ELEMENTS . 'js/');
define('PATH_XML_FORM_ELEMENTS_CSS', PATH_XML_FORM_ELEMENTS . 'css/');
define('PATH_XML_FORM_ELEMENTS_IMAGES', PATH_XML_FORM_ELEMENTS . 'images/');

/**
 * Implements hook_menu().
 *
 * @return array
 */
function xml_form_elements_menu() {
  /**
   * Validate's the entire form.
   */
  $items[MENU_XML_FORM_ELEMENTS_AHAH_VALIDATE] = array(
    'title' => 'Validate',
    'description' => 'AHAH callback',
    'page callback' => 'xml_form_elements_ahah_validate_form',
    'access arguments' => array('access content'),
    'file' => 'Validate.inc',
    'file path' => PATH_XML_FORM_ELEMENTS_INCLUDES,
    'type' => MENU_CALLBACK,
  );
  /**
   * Validate's a form element. Takes one parameter.
   * The first parameter is the #hash of the element to render.
   */
  $items[MENU_XML_FORM_ELEMENTS_AHAH_VALIDATE_ELEMENT] = array(
    'title' => 'Validate a Element',
    'description' => 'AHAH callback',
    'page callback' => 'Element::Validate',
    'page arguments' => array(5),
    'access arguments' => array('access content'),
    'file' => 'Element.inc',
    'file path' => PATH_XML_FORM_ELEMENTS_INCLUDES,
    'type' => MENU_CALLBACK,
  );
  /**
   * Rebuild the form and re-render a chunk of it. Takes one parameter.
   * The first parameter is the #hash of the element to render.
   */
  $items[MENU_XML_FORM_ELEMENTS_AHAH_REBUILD] = array(
    'title' => 'Rebuild the form.',
    'description' => 'AHAH callback',
    'page callback' => 'Element::Rebuild',
    'page arguments' => array(5),
    'access arguments' => array('access content'),
    'file' => 'Element.inc',
    'file path' => PATH_XML_FORM_ELEMENTS_INCLUDES,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_element_info().
 *
 * @return array
 */
function xml_form_elements_element_info() {
  return array(
    'tabs' => array(
      '#input' => TRUE,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#process' => array('xml_form_elements_tabs_process'),
      //'#theme' => 'tabs_content',
      '#theme_wrappers' => array('tabs', 'form_element'),
    ),
    'tabpanel' => array(
      '#input' => TRUE,
      '#process' => array('xml_form_elements_tabpanel_process'),
      '#user_data' => array('add' => TRUE, 'delete' => TRUE),
      //'#theme' => 'tabpanel',
  	  '#theme_wrappers' => array('tabpanel'),
    ),
    'tags' => array(
      '#input' => TRUE,
      '#process' => array('xml_form_elements_tags_process'),
      //'#theme' => 'tags_content',
      '#theme_wrappers' => array('tags', 'form_element'),
    ),
    'tag' => array(
      '#input' => TRUE,
      '#process' => array('xml_form_elements_tag_process'),
      '#theme' => 'tag',
      //'#theme_wrapper' => array('form_element'),
    ),
    'datepicker' => array(
      '#input' => TRUE,
      '#process' => array('xml_form_elements_datepicker_process'),
      '#theme' => 'datepicker',
      //'#theme_wrappers' => array('form_element'),
    ),
    'pages' => array(
      '#input' => TRUE,
      '#process' => array(
        'xml_form_elements_process_pages_include_file',
        'xml_form_elements_process_pages_add_resources',
        'xml_form_elements_process_pages_add_pagers',
      ),
    ),
    'page' => array(
      '#input' => TRUE,
      '#process' => array('xml_form_elements_process_page'),
    ),
    'validate' => array(
      '#input' => TRUE,
      '#button_type' => 'submit',
      '#process' => array('xml_form_elements_process_validate', 'form_expand_ahah'),
    ),
  );
}

/**
 * Implements hook_theme().
 *
 * @return array
 */
function xml_form_elements_theme($existing, $type, $theme, $path) {
  return array(
    THEME_XML_FORM_ELEMENTS_TABS => array(
      'render element' => 'element',
      'template' => 'templates/Tabs',
      'file' => 'includes/Tabs.inc',
    ),
    THEME_XML_FORM_ELEMENTS_TABPANEL => array(// The content of a single tabpanel.
      'render element' => 'element',
      'file' => 'includes/TabPanel.inc',
    ),
    THEME_XML_FORM_ELEMENTS_TAGS => array(
      'render element' => 'element', // => NULL),
      'template' => 'templates/Tags',
      'file' => 'includes/Tags.inc',
    ),
    THEME_XML_FORM_ELEMENTS_TAG => array(
      'render element' => 'element',
      'file' => 'includes/Tag.inc',
    ),
    'datepicker' => array(
      'render element' => 'element',
      'file' => 'includes/Datepicker.inc',
    ),
    THEME_XML_FORM_ELEMENTS_VALIDATE => array(
      'file' => 'includes/Validate.inc',
    ),
    THEME_XML_FORM_ELEMENTS_PAGES => array(
      'render element' => 'element',
      'template' => 'templates/Pages',
      'file' => 'includes/Pages.inc',
    ),
    THEME_XML_FORM_ELEMENTS_PAGE => array(
      'variables' => array('element' => NULL),
      'file' => 'includes/Pages.inc',
    ),
  );
}

/**
 * Process the 'tabs' Element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The drupal form.
 *
 * @return array
 *   The processed element.
 */
function xml_form_elements_tabs_process(array $element, array &$form_state, array $complete_form = NULL) {
  module_load_include('inc', 'xml_form_elements', 'includes/Tabs');
  return Tabs::Process($element, $form_state, $complete_form);
}

/**
 * Process the 'tabpanel' Element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The drupal form.
 *
 * @return array
 *   The processed element.
 */
function xml_form_elements_tabpanel_process(array $element, array &$form_state, array $complete_form = NULL) {
  module_load_include('inc', 'xml_form_elements', 'includes/TabPanel');
  return TabPanel::Process($element, $form_state, $complete_form);
}

/**
 * Process the 'tags' Element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The drupal form.
 *
 * @return array
 *   The processed element.
 */
function xml_form_elements_tags_process(array $element, array &$form_state, array $complete_form = NULL) {
  module_load_include('inc', 'xml_form_elements', 'includes/Tags');
  return Tags::Process($element, $form_state, $complete_form);
}

/**
 * Process the 'tag' Element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The drupal form.
 *
 * @return array
 *   The processed element.
 */
//array $element, $edit, array &$form_state, array $complete_form = NULL
function xml_form_elements_tag_process($element, $form_state, $complete_form) {
  module_load_include('inc', 'xml_form_elements', 'includes/Tag');
  return Tag::Process($element, $form_state, $complete_form);
}

/**
 * Process the 'datepicker' Element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The drupal form.
 *
 * @return array
 *   The processed element.
 */
function xml_form_elements_datepicker_process($element, &$form_state, $complete_form) {
  module_load_include('inc', 'xml_form_elements', 'includes/Datepicker');
  return Datepicker::Process($element, $form_state, $complete_form);
}

/**
 *  Global reference to the #process callback for the 'pages' form element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The complete drupal form.
 *
 * @return array
 *   The processed element.
 */
function xml_form_elements_process_pages_include_file(array $element, array &$form_state, array $complete_form = NULL) {
  module_load_include('inc', 'xml_form_elements', 'includes/Pages');
  return $element;
}

/**
 * Global reference to the #process callback for the 'pages' form element.
 *
 * @param array $element
 *   The element to be processed.
 * @param mixed $edit
 *   The submitted value for this element, or NULL.
 * @param array $form_state
 *   The drupal form state.
 * @param array $complete_form
 *   The complete drupal form.
 *
 * @return array
 *   The processed element.
 */
//$element, $form_state, and $complete_form
//$element, &$form_state, $form
function xml_form_elements_process_page(array $element,  &$form_state, array $complete_form = NULL) {
  module_load_include('inc', 'xml_form_elements', 'includes/Pages');
  return xml_form_elements_process_page_initialize($element, $edit, $form_state, $complete_form);
}

/**
 *
 * @param array $element
 * @param mixed $edit
 * @param array $form_state
 * @param array $complete_form
 */
function xml_form_elements_process_validate(array $element, array &$form_state, array $complete_form = NULL) {
  module_load_include('inc', 'xml_form_elements', 'Validate');
  Element::addRequiredResources();
  $element['#ajax'] = array(
    'path' => 'xml/form/elements/ahah/validate',
    'wrapper' => $complete_form['#id'], // The parents wrapper is set to the parents hash.
    'method' => 'prepend',
    'effect' => 'fade',
    'event' => 'mousedown',
    'keypress' => TRUE,
  );
  return $element;
}

/**
 * Theme function for the validate element
 *
 * @param array $element
 *
 * @return string
 *
 */
function theme_validate($element) {
  // TODO: Should this theme validate be declared in hook_theme()?
  // TODO Please change this theme call to use an associative array for the $variables parameter.
  return theme('submit', $element);
}

/**
 * AJAX callback to duplicate the parent element.
 * 
 * Used by TabPanels.
 * @param $form
 * @param $form_state
 */
function xml_form_elements_duplicate($drupal_form, $form_state) {
	$trigger = $form_state['triggering_element'];
	$duplicate = $trigger['#ajax']['params']['duplicate'];
	
	// Duplicate Element
	$form = new XMLForm($form_state);
	$original = $form->findElement($duplicate);
	$new_element = $form->duplicateOriginal($duplicate);
	$original->parent->adopt($new_element);
	drupal_process_form($drupal_form['#form_id'], $drupal_form, $form_state);
	
	// Find the element to render.
	module_load_include('inc', 'objective_forms', 'Utils');
	$to_return = find_element($drupal_form, $trigger['#ajax']['params']['render']);
 	return $to_return;
}

function xml_form_elements_delete_tab($drupal_form, $form_state) {
	$trigger = $form_state['triggering_element'];
	$remove = $trigger['#ajax']['params']['delete'];
	$render = $trigger['#ajax']['params']['render'];
	
	// Remove Element
	$xml_form = new XMLForm($form_state);
	$xml_form->remove($remove);
	
	// Rebuild the form, validation and submit callbacks will be called.
	drupal_process_form($drupal_form['#form_id'], $drupal_form, $form_state);
	
	// Find the element to render.
	module_load_include('inc', 'objective_forms', 'Utils');
	$element = find_element($form, $render);
	
	// Respond to the request with JSON.
	return $element;	
}

function xml_form_elements_add_tag($drupal_form, $form_state) {
	$tags = $form_state['triggering_element']['#ajax']['params']['target'];
	
	module_load_include('inc', 'objective_forms', 'Utils');
	$tags = find_element($drupal_form, $tags); // Find the tags we are dealing with.
	$children = get_element_children($tags, 'tag');
	$input = &$tags[array_shift($children)]; // Get the input field.
	dsm($input, 'input');
	$input_hash = $input['#hash'];
	$input_value = $input['#value'];
	form_set_value($input, '', $form_state); // Set input field to ''.
	
	
	// Duplicate Element, set its default value to the submitted value.
	$form = new XMLForm($form_state);
	$input = $form->findElement($input_hash);
	$new_element = $form->duplicateOriginal($input_hash);
	$new_element['#default_value'] = $input_value; // Get the value from input.
	$input->parent[] = $new_element; // Add to the form.
	
	// Process and rebuild.
	drupal_process_form($drupal_form['#form_id'], $drupal_form, $form_state);
	
	// Find the parent element to render.
	$element = find_element($drupal_form, $tags['#hash']);
	
	// Respond to the request with JSON.
	return $element;
}


function xml_form_elements_delete_tag($drupal_form, $form_state) {
	$tag = $form_state['triggering_element']['#ajax']['params']['target'];
	
	// Duplicate Element, set its default value to the submitted value.
	$form = new XMLForm($form_state);
	$tag = $form->findElement($tag);
	$render = $tag->parent->hash;
	$form->remove($tag->hash);
	
	// Rebuild.
	drupal_process_form($drupal_form['#form_id'], $drupal_form, $form_state);
	
	// Find the parent element to render.
	module_load_include('inc', 'objective_forms', 'Utils');
	$element = find_element($drupal_form, $render);
	
	// Respond to the request with JSON.
	return $element;
}

function xml_form_elements_edit_tag($drupal_form, $form_state) {
	$hash = $form_state['triggering_element']['#ajax']['params']['target'];
	
	$form = new XMLForm($form_state);
	module_load_include('inc', 'objective_forms', 'Utils');
	$edit = find_element($drupal_form, $hash); // Find the tags we are dealing with.
	$tags = get_form_element_parent($edit, $drupal_form);
	$children = get_element_children($tags, 'tag');
	$input = &$tags[array_shift($children)]; // Get the input field.
	dsm($input, 'input');
	if (trim($input['#value']) != '') { // If the input field has a value create a tag for it.
		$new_element = $form->duplicateOriginal($input['#hash']);
		$new_element['#default_value'] = $input['#value'];
		$parent = $form->findElement($tags['#hash']); // Parent
		$parent[] = $new_element; // Append
	}
	form_set_value($input, $edit['#value'], $form_state); // Set input field value.
	$form->remove($hash); // Its the input element now.
	
	// Process/rebuild
	drupal_process_form($drupal_form['#form_id'], $drupal_form, $form_state);

	// Find the parent element to render.
	$element = find_element($drupal_form, $tags['#hash']);
	dsm($tags, 'tags');
	
	// Respond to the request with JSON.
	return $element;
}