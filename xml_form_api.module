<?php

// $Id$

/**
 * @file
 *
 */

/**
 * Implementation of Hook Menu.
 *
 * @return array
 */
function xml_form_api_menu() {
  $items['FormDefinition.xsd'] = array(
    'title' => 'Form Definition',
    'description' => 'Returns FormDefinition.xsd',
    'page callback' => 'xml_form_api_get_form_defintion',
    'type' => MENU_CALLBACK,
  );
  $items['test'] = array(
    'title' => 'Test',
    'description' => 'test',
    'page callback' => 'xml_form_api_test',
    'access arguments' => array('administer access control'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Menu Callback, returns FormDefinition.xsd
 */
function xml_form_api_get_form_defintion() {
  
}

/**
 * 
 */
function xml_form_api_test() {
  return drupal_get_form('xml_form');
}

function xml_form(&$form_state) {
  module_load_include('inc', 'xml_form_api', 'FormDefinition');
  module_load_include('inc', 'xml_form_api', 'Form');
  module_load_include('inc', 'xml_form_api', 'FormStorage');
  $storage = new FormStorage($form_state);
  $form = new Form($storage);
  if ($form->isInitialized()) { // Was initialized from storage.
    return $form->toDrupalForm();
  }
  else {
    $document = new DOMDocument();
    $document->load(drupal_get_path('module', 'xml_form_api') . '/FormDefinition.xml');
    $xml = $document->saveXML();
    $definition = new FormDefinition($xml);
    $properties = $definition->getDocumentProperties();
    $document = new DOMDocument();
    $document->load(drupal_get_path('module', 'xml_form_api') . '/test_data/mods.xml');
    $xml = $document->saveXML();
    $document = new Document($properties, $xml);
    $form->initialize($definition, $document); // Hidden Params for extra, but at very least we need the definition.
    return $form->generate();
  }
}

function xml_form_validate($form, &$form_state) {
  $storage = new FormStorage($form_state);
  $form = new Form($storage);
  //$form->validate($form_state);
}

function xml_form_submit($form, &$form_state) {
  $storage = new FormStorage($form_state);
  $form = new Form($storage);
  $form->submit($form_state);
}
